physics:
    forward_operator: fft2(centered=False)
    backward_operator: ifft2(centered=False)
training:
    datasets:
        # Two datasets, only difference is the shape, so the data can be collated for larger batches. R=5
        -   name: CalgaryCampinas
            filenames_lists:
                - ../lists/train/12x218x170_train.lst
            transforms:
                cropping:
                    crop: null
                sensitivity_map_estimation:
                    estimate_sensitivity_maps: true  # Estimate the sensitivity map on the ACS
                normalization:
                    scaling_key: masked_kspace  # Compute the image normalization based on the masked_kspace maximum
                masking:
                    name: CalgaryCampinas
                    accelerations: [5, 10]
            crop_outer_slices: true
        -   name: CalgaryCampinas
            filenames_lists:
                - ../lists/train/12x218x180_train.lst
            transforms:
                cropping:
                    crop: null
                sensitivity_map_estimation:
                    estimate_sensitivity_maps: true  # Estimate the sensitivity map on the ACS
                normalization:
                    scaling_key: masked_kspace
                masking:
                    name: CalgaryCampinas
                    accelerations: [5, 10]
            crop_outer_slices: true
    batch_size: 2  # This is the batch size per GPU!
    optimizer: Adam
    lr: 0.001
    weight_decay: 0.0
    lr_step_size: 50000
    lr_gamma: 0.2
    lr_warmup_iter: 1000
    num_iterations: 1000000
    gradient_steps: 1
    gradient_clipping: 0.0
    gradient_debug: false
    checkpointer:
        checkpoint_steps: 500
    validation_steps: 500
    loss:
        crop: null
        losses:
            -   function: l1_loss
                multiplier: 1.0
            -   function: ssim_loss
                multiplier: 1.0
validation:
    datasets:
        # Twice the same dataset but a different acceleration factor
        -   name: CalgaryCampinas
            transforms:
                cropping:
                    crop: null
                sensitivity_map_estimation:
                    estimate_sensitivity_maps: true  # Estimate the sensitivity map on the ACS
                normalization:
                    scaling_key: masked_kspace
                masking:
                    name: CalgaryCampinas
                    accelerations: [5]
            crop_outer_slices: true
            text_description: 5x  # Description for logging
        -   name: CalgaryCampinas
            transforms:
                cropping:
                    crop: null
                sensitivity_map_estimation:
                    estimate_sensitivity_maps: true  # Estimate the sensitivity map on the ACS
                normalization:
                    scaling_key: masked_kspace
                masking:
                    name: CalgaryCampinas
                    accelerations: [10]
            crop_outer_slices: true
            text_description: 10x  # Description for logging
    crop: null  # This sets the cropping for the DoIterationOutput
    metrics:  # These are obtained from direct.functionals
        - calgary_campinas_psnr
        - calgary_campinas_ssim
        - calgary_campinas_vif
        - fastmri_nmse
model:
    model_name: conjgradnet.conjgradnet.ConjGradNet
    num_steps: 12
    image_init: ZEROS
    no_parameter_sharing: true
    cg_tol: 1e-8
    cg_iters: 12
    cg_param_update_type: FR
    denoiser_architecture: NORMUNET
    unet_num_filters: 32
    unet_num_pool_layers: 4
additional_models:
    sensitivity_model:
        model_name: unet.unet_2d.UnetModel2d
        in_channels: 2
        out_channels: 2
        num_filters: 8
        num_pool_layers: 4
        dropout_probability: 0.0
logging:
    tensorboard:
        num_images: 4
